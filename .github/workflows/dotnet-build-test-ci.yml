name: .NET CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build the project
      run: dotnet build --configuration Release --no-restore

    - name: Run tests with coverage
      run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory TestResults/ --logger "trx;LogFileName=TestResults.trx"

    - name: Generate coverage report
      run: |
        dotnet tool install --global dotnet-reportgenerator-globaltool
        reportgenerator -reports:TestResults/**/coverage.cobertura.xml -targetdir:coverage -reporttypes:Html

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: TestResults
        path: TestResults/

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      with:
        name: CoverageReport
        path: coverage/

  package:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Pack the project into a NuGet package
      run: dotnet pack --configuration Release --no-build --output ./nupkgs

    - name: Upload NuGet package as artifact
      uses: actions/upload-artifact@v3
      with:
        name: NuGetPackages
        path: ./nupkgs
